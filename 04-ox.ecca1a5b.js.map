{"mappings":"AAAA,SAAAA,kBAAAC,EAAAC,I,m8BAoBA,IApBA,IAOYC,IAPNC,QAAUC,SAASC,cAAc,YACjCC,MAAQ,OACRC,MAAQ,OACRC,eAAiB,SACnBC,OAASC,aAAaC,QAAQH,iBAAmB,IAEjDI,MAAQC,KAAKC,MAAMJ,aAAaC,QAAQL,SAAW,GACnDS,MAA+C,QAAvCb,IAAAW,KAAKC,MAAMJ,aAAaC,QAAQJ,eAAO,IAAvCL,QAA2C,GACjDc,IAAM,CACV,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAELC,OAAS,GAEJC,EAAI,EAAGA,GAAK,EAAGA,GAAK,EAC3BD,QAAU,8BAAgCE,OAAFD,EAAE,YAM5C,SAASE,QAAQC,GAEf,IAAKA,EAAIC,OAAOC,YAAa,CAC3B,IAAMC,EAAKC,OAAOJ,EAAIC,OAAOI,QAAQF,IACrC,GAAe,MAAXf,OAAgB,CAClBG,MAAMe,KAAKH,GACXd,aAAakB,QAAQtB,MAAOO,KAAKgB,UAAUjB,QAC3C,IAAMkB,EAAWC,YAAYnB,OAE7B,GADAS,EAAIC,OAAOC,YAAcd,OACrBqB,EAMF,OALAE,QAAQC,IAAI,GAAUd,OAAPV,OAAO,uBAEnByB,YAAQ,WACTC,O,GACC,I,KAGA,CACLpB,MAAMY,KAAKH,GACXd,aAAakB,QAAQrB,MAAOM,KAAKgB,UAAUd,QAC3C,IAAMqB,EAAWL,YAAYhB,OAE7B,GADAM,EAAIC,OAAOC,YAAcd,OACrB2B,EAMF,OALAJ,QAAQC,IAAI,GAAUd,OAAPV,OAAO,uBAEnByB,YAAQ,WACTC,O,GACC,I,CAKP1B,OAAoB,MAAXA,OAAiB,IAAM,IAChCC,aAAakB,QAAQpB,eAAgBC,O,EAIzC,SAASsB,YAAY/B,GAEnB,OADegB,IAAIqB,MAAK,SAAAC,G,OAAUA,EAAOC,OAAM,SAAAC,G,OAASxC,EAAIyC,SAASD,E,OAIvE,SAASL,QACPhC,QAAQuC,UAAYzB,OAEpBP,aAAaiC,QACblC,OAAS,IACTG,MAAQ,GACRG,MAAQ,E,CAnDVZ,QAAQyC,mBAAmB,YAAa3B,QACxCd,QAAQ0C,iBAAiB,QAASzB,SAuDjC,WACC,IACG0B,mBAAG3C,QAAQ4C,UAAUC,SAAQ,SAAAC,GAC5B,IAAMzB,EAAKC,OAAOwB,EAAKvB,QAAQF,IAC3BZ,MAAM6B,SAASjB,GACjByB,EAAK1B,YAAc,IACVR,MAAM0B,SAASjB,KACxByB,EAAK1B,YAAc,I,IAGvB,MAAO2B,GACPlB,QAAQC,IAAI,qB,CAEf,CAbA","sources":["src/js/04-ox.js"],"sourcesContent":["const content = document.querySelector('.content');\nconst KEY_X = 'keyX';\nconst KEY_O = 'keyO';\nconst CURRENT_PLAYER = 'player';\nlet player = localStorage.getItem(CURRENT_PLAYER) || 'X';\n\nlet stepX = JSON.parse(localStorage.getItem(KEY_X)) || [];\nlet stepO = JSON.parse(localStorage.getItem(KEY_O)) ?? [];\nconst win = [\n  [1, 2, 3],\n  [4, 5, 6],\n  [7, 8, 9],\n  [1, 4, 7],\n  [2, 5, 8],\n  [3, 6, 9],\n  [1, 5, 9],\n  [3, 5, 7],\n];\nlet markup = '';\n\nfor (let i = 1; i <= 9; i += 1) {\n  markup += `<div class=\"item\" data-id=\"${i}\"></div>`;\n}\n\ncontent.insertAdjacentHTML('beforeend', markup);\ncontent.addEventListener('click', onClick);\n\nfunction onClick(evt) {\n  // '' => !false => true\n  if (!evt.target.textContent) {\n    const id = Number(evt.target.dataset.id);\n    if (player === 'X') {\n      stepX.push(id);\n      localStorage.setItem(KEY_X, JSON.stringify(stepX));\n      const isWinner = checkWinner(stepX);\n      evt.target.textContent = player;\n      if (isWinner) {\n        console.log(`${player} is Winner üòé`);\n\n        setTimeout(() => {\n          reset();\n        }, 500);\n        return;\n      }\n    } else {\n      stepO.push(id);\n      localStorage.setItem(KEY_O, JSON.stringify(stepO));\n      const isWinner = checkWinner(stepO);\n      evt.target.textContent = player;\n      if (isWinner) {\n        console.log(`${player} is Winner üòé`);\n\n        setTimeout(() => {\n          reset();\n        }, 500);\n        return;\n      }\n    }\n\n    player = player === 'X' ? 'O' : 'X';\n    localStorage.setItem(CURRENT_PLAYER, player);\n  }\n}\n\nfunction checkWinner(arr) {\n  const result = win.some(values => values.every(value => arr.includes(value)));\n  return result;\n}\n\nfunction reset() {\n  content.innerHTML = markup;\n  // localStorage.removeItem(KEY_X);\n  localStorage.clear();\n  player = 'X';\n  stepX = [];\n  stepO = [];\n}\n\n// https://developer.mozilla.org/en-US/docs/Glossary/IIFE\n\n(function () {\n  try {\n    [...content.children].forEach(item => {\n      const id = Number(item.dataset.id);\n      if (stepX.includes(id)) {\n        item.textContent = 'X';\n      } else if (stepO.includes(id)) {\n        item.textContent = 'O';\n      }\n    });\n  } catch (e) {\n    console.log('localStorage empty');\n  }\n})();\n\n// const user = [1,2,3,4]\n// // console.log('before',user);\n// // const jsonValue = JSON.stringify(user)\n// // console.log('after',jsonValue);\n// // console.log('parse', JSON.parse(jsonValue));\n\n// localStorage.setItem('test', JSON.stringify(user))\n// const response = localStorage.getItem('test')\n\n// console.log(JSON.parse(response));\n\n// const setLocal = document.querySelector('.set-local')\n// const getLocal = document.querySelector('.get-local')\n// const setSession = document.querySelector('.set-session')\n// const getSession = document.querySelector('.get-session')\n\n// setLocal.addEventListener('click', onSetLocal)\n// getLocal.addEventListener('click', onGetLocal)\n\n// function onSetLocal() {\n//     localStorage.setItem('localStorage', 'localStorage')\n// }\n\n// function onGetLocal() {\n//     try{\n//         const response = localStorage.getItem('localStorage');\n//         const arr = response.split('')\n//         console.log(arr);\n//     }catch(e){\n//         console.error(e);\n//     }finally{\n//         console.log('finally');\n//     }\n//     –û–ø–µ—Ä–∞—Ç–æ—Ä –ê–ë–û ||\n// \"\"\n// 0\n// null\n// undefined\n// NaN\n// false\n\n// –û–ø–µ—Ä–∞—Ç–æ—Ä ??\n// null\n// undefined\n\n//     const response = localStorage.getItem('localStorage') ?? '';\n//     const arr = response.split('')\n//     console.log(arr);\n//     console.log('hello world');\n// }\n\n// setSession.addEventListener('click', onSetSession)\n// getSession.addEventListener('click', onGetSession)\n\n// function onSetSession() {\n//     sessionStorage.setItem('sessionStorage', 'sessionStorage')\n// }\n\n// function onGetSession() {\n\n//     console.log(sessionStorage.getItem('sessionStorage'));\n// }\n\n// –¢–£–¢–ê–†–Ü–ê–õ –ü–û –î–û–ö–Ü\n// 1 Install - npm install simplelightbox\n// 2 –Ø–∫ –∑—Ä–æ–±–∏—Ç–∏ import - import SimpleLightbox from \"simplelightbox\";\n// 3 –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ console.log(SimpleLightbox)\n// 4 –Ø–∫ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏ Usage - new SimpleLightbox('.some-element a', { /* options */ });\n// 5 –†–æ–∑–±—ñ—Ä –æ–ø—Ü—ñ–π Options\n// 6 –ú–µ—Ç–æ–¥–∏ —Ä–æ–±–æ—Ç–∏ –∑ —ñ–Ω—Å—Ç–∞–Ω—Å–æ–º(–µ–∫–∑–µ–º–ø—è—Ä–æ–º)\n"],"names":["_arrayLikeToArray","arr","len","ref","content","document","querySelector","KEY_X","KEY_O","CURRENT_PLAYER","player","localStorage","getItem","stepX","JSON","parse","stepO","win","markup","i","concat","onClick","evt","target","textContent","id","Number","dataset","push","setItem","stringify","isWinner","checkWinner","console","log","setTimeout","reset","isWinner1","some","values","every","value","includes","innerHTML","clear","insertAdjacentHTML","addEventListener","_toConsumableArray","children","forEach","item","e"],"version":3,"file":"04-ox.ecca1a5b.js.map"}